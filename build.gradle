import org.gradle.internal.os.OperatingSystem

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                : "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = System.getProperty("os.arch").contains("64") ? "natives-windows" : "natives-windows-x86"
        break
}

apply plugin: 'idea'
apply plugin: 'java-library'
apply plugin: 'maven-publish'

group 'io.github.ocelot'
version '1.0.1'

if (System.getenv('BUILD_NUMBER') != null) {
    version += "." + System.getenv('BUILD_NUMBER')
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    implementation platform("org.lwjgl:lwjgl-bom:3.3.3")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-glfw"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"

    compileOnly 'org.jetbrains:annotations:24.1.0'
    implementation "org.slf4j:slf4j-api:2.0.12"

    // Objective C for Mac
    implementation "ca.weblite:java-objc-bridge:1.2"

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'

    // Test OpenGL
    testImplementation "org.lwjgl:lwjgl-opengl"
    testRuntimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"

    testImplementation 'ch.qos.logback:logback-core:1.5.1'
    testImplementation 'ch.qos.logback:logback-classic:1.5.1'
}

test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        myJava(MavenPublication) {
            from components.java
        }
    }
}